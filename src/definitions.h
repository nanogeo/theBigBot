#pragma once
#include "sc2api/sc2_unit_filters.h"

#include <vector>

namespace sc2
{

#define NEXUS UNIT_TYPEID::PROTOSS_NEXUS
#define PYLON UNIT_TYPEID::PROTOSS_PYLON
#define GATEWAY UNIT_TYPEID::PROTOSS_GATEWAY
#define WARP_GATE UNIT_TYPEID::PROTOSS_WARPGATE
#define ASSIMILATOR UNIT_TYPEID::PROTOSS_ASSIMILATOR
#define FORGE UNIT_TYPEID::PROTOSS_FORGE
#define CYBERCORE UNIT_TYPEID::PROTOSS_CYBERNETICSCORE
#define CANNON UNIT_TYPEID::PROTOSS_PHOTONCANNON
#define BATTERY UNIT_TYPEID::PROTOSS_SHIELDBATTERY
#define TWILIGHT UNIT_TYPEID::PROTOSS_TWILIGHTCOUNCIL
#define TEMPLAR_ARCHIVE UNIT_TYPEID::PROTOSS_TEMPLARARCHIVE
#define STARGATE UNIT_TYPEID::PROTOSS_STARGATE
#define FLEET_BEACON UNIT_TYPEID::PROTOSS_FLEETBEACON
#define DARK_SHRINE UNIT_TYPEID::PROTOSS_DARKSHRINE
#define ROBO UNIT_TYPEID::PROTOSS_ROBOTICSFACILITY
#define ROBO_BAY UNIT_TYPEID::PROTOSS_ROBOTICSBAY
#define PROBE UNIT_TYPEID::PROTOSS_PROBE
#define ZEALOT UNIT_TYPEID::PROTOSS_ZEALOT
#define STALKER UNIT_TYPEID::PROTOSS_STALKER
#define SENTRY UNIT_TYPEID::PROTOSS_SENTRY
#define ADEPT UNIT_TYPEID::PROTOSS_ADEPT
#define HIGH_TEMPLAR UNIT_TYPEID::PROTOSS_HIGHTEMPLAR
#define DARK_TEMPLAR UNIT_TYPEID::PROTOSS_DARKTEMPLAR
#define IMMORTAL UNIT_TYPEID::PROTOSS_IMMORTAL
#define COLOSSUS UNIT_TYPEID::PROTOSS_COLOSSUS
#define DISRUPTOR UNIT_TYPEID::PROTOSS_DISRUPTOR
#define ARCHON UNIT_TYPEID::PROTOSS_ARCHON
#define OBSERVER UNIT_TYPEID::PROTOSS_OBSERVER
#define OBSERVER_SIEGED UNIT_TYPEID::PROTOSS_OBSERVERSIEGEMODE
#define PRISM UNIT_TYPEID::PROTOSS_WARPPRISM
#define PRISM_SIEGED UNIT_TYPEID::PROTOSS_WARPPRISMPHASING
#define PHOENIX UNIT_TYPEID::PROTOSS_PHOENIX
#define VOID_RAY UNIT_TYPEID::PROTOSS_VOIDRAY
#define ORACLE UNIT_TYPEID::PROTOSS_ORACLE
#define CARRIER UNIT_TYPEID::PROTOSS_CARRIER
#define TEMPEST UNIT_TYPEID::PROTOSS_TEMPEST
#define MOTHERSHIP UNIT_TYPEID::PROTOSS_MOTHERSHIP


#define COMMAND_CENTER UNIT_TYPEID::TERRAN_COMMANDCENTER
#define COMMAND_CENTER_FLYING UNIT_TYPEID::TERRAN_COMMANDCENTERFLYING
#define PLANETARY UNIT_TYPEID::TERRAN_PLANETARYFORTRESS
#define ORBITAL UNIT_TYPEID::TERRAN_ORBITALCOMMAND
#define ORBITAL_FLYING UNIT_TYPEID::TERRAN_ORBITALCOMMANDFLYING
#define SUPPLY_DEPOT UNIT_TYPEID::TERRAN_SUPPLYDEPOT
#define SUPPLY_DEPOT_LOWERED UNIT_TYPEID::TERRAN_SUPPLYDEPOTLOWERED
#define REFINERY UNIT_TYPEID::TERRAN_REFINERY
#define BARRACKS UNIT_TYPEID::TERRAN_BARRACKS
#define BARRACKS_FLYING UNIT_TYPEID::TERRAN_BARRACKSFLYING
#define ENGINEERING_BAY UNIT_TYPEID::TERRAN_ENGINEERINGBAY
#define BUNKER UNIT_TYPEID::TERRAN_BUNKER
#define SENSOR_TOWER UNIT_TYPEID::TERRAN_SENSORTOWER
#define MISSILE_TURRET UNIT_TYPEID::TERRAN_MISSILETURRET
#define FACTORY UNIT_TYPEID::TERRAN_FACTORY
#define FACTORY_FLYING UNIT_TYPEID::TERRAN_FACTORYFLYING
#define GHOST_ACADEMY UNIT_TYPEID::TERRAN_GHOSTACADEMY
#define STARPORT UNIT_TYPEID::TERRAN_STARPORT
#define STARPORT_FLYING UNIT_TYPEID::TERRAN_STARPORTFLYING
#define ARMORY UNIT_TYPEID::TERRAN_ARMORY
#define FUSION_CORE UNIT_TYPEID::TERRAN_FUSIONCORE
#define TECH_LAB UNIT_TYPEID::TERRAN_TECHLAB
#define REACTOR UNIT_TYPEID::TERRAN_REACTOR
#define BARRACKS_TECH_LAB UNIT_TYPEID::TERRAN_BARRACKSTECHLAB
#define BARRACKS_REACTOR UNIT_TYPEID::TERRAN_BARRACKSREACTOR
#define FACTORY_TECH_LAB UNIT_TYPEID::TERRAN_FACTORYTECHLAB
#define FACTORY_REACTOR UNIT_TYPEID::TERRAN_FACTORYREACTOR
#define STARPORT_TECH_LAB UNIT_TYPEID::TERRAN_STARPORTTECHLAB
#define STARPORT_REACTOR UNIT_TYPEID::TERRAN_STARPORTREACTOR
#define SCV UNIT_TYPEID::TERRAN_SCV
#define MULE UNIT_TYPEID::TERRAN_MULE
#define MARINE UNIT_TYPEID::TERRAN_MARINE
#define MARAUDER UNIT_TYPEID::TERRAN_MARAUDER
#define REAPER UNIT_TYPEID::TERRAN_REAPER
#define GHOST UNIT_TYPEID::TERRAN_GHOST
#define HELLION UNIT_TYPEID::TERRAN_HELLION
#define HELLBAT UNIT_TYPEID::TERRAN_HELLIONTANK
#define SIEGE_TANK UNIT_TYPEID::TERRAN_SIEGETANK
#define SIEGE_TANK_SIEGED UNIT_TYPEID::TERRAN_SIEGETANKSIEGED
#define CYCLONE UNIT_TYPEID::TERRAN_CYCLONE
#define THOR_AOE UNIT_TYPEID::TERRAN_THOR
#define THOR_AP UNIT_TYPEID::TERRAN_THORAP
#define WIDOW_MINE UNIT_TYPEID::TERRAN_WIDOWMINE
#define AUTO_TURRET UNIT_TYPEID::TERRAN_AUTOTURRET
#define VIKING UNIT_TYPEID::TERRAN_VIKINGFIGHTER
#define VIKING_LANDED UNIT_TYPEID::TERRAN_VIKINGASSAULT
#define MEDIVAC UNIT_TYPEID::TERRAN_MEDIVAC
#define LIBERATOR UNIT_TYPEID::TERRAN_LIBERATOR
#define LIBERATOR_SIEGED UNIT_TYPEID::TERRAN_LIBERATORAG
#define RAVEN UNIT_TYPEID::TERRAN_RAVEN
#define BANSHEE UNIT_TYPEID::TERRAN_BANSHEE
#define BATTLECRUISER UNIT_TYPEID::TERRAN_BATTLECRUISER


#define LARVA UNIT_TYPEID::ZERG_LARVA
#define EGG UNIT_TYPEID::ZERG_EGG
#define DRONE UNIT_TYPEID::ZERG_DRONE
#define DRONE_BURROWED UNIT_TYPEID::ZERG_DRONEBURROWED
#define QUEEN UNIT_TYPEID::ZERG_QUEEN
#define QUEEN_BURROWED UNIT_TYPEID::ZERG_QUEENBURROWED
#define ZERGLING UNIT_TYPEID::ZERG_ZERGLING
#define ZERGLING_BURROWED UNIT_TYPEID::ZERG_ZERGLINGBURROWED
#define BANELING_EGG UNIT_TYPEID::ZERG_BANELINGCOCOON
#define BANELING UNIT_TYPEID::ZERG_BANELING
#define BANELING_BURROWED UNIT_TYPEID::ZERG_BANELINGBURROWED
#define ROACH UNIT_TYPEID::ZERG_ROACH
#define ROACH_BURROWED UNIT_TYPEID::ZERG_ROACHBURROWED
#define RAVAGER_EGG UNIT_TYPEID::ZERG_RAVAGERCOCOON
#define RAVAGER UNIT_TYPEID::ZERG_RAVAGER
#define RAVAGER_BURROWED UNIT_TYPEID::RAVAGERBURROWED
#define HYDRA UNIT_TYPEID::ZERG_HYDRALISK
#define HYDRA_BURROWED UNIT_TYPEID::ZERG_HYDRALISKBURROWED
#define LURKER_EGG UNIT_TYPEID::ZERG_LURKERMPEGG
#define LURKER UNIT_TYPEID::ZERG_LURKERMP
#define LURKER_BURROWED UNIT_TYPEID::ZERG_LURKERMPBURROWED
#define INFESTOR UNIT_TYPEID::ZERG_INFESTOR
#define INFESTOR_BURROWED UNIT_TYPEID::ZERG_INFESTORBURROWED
#define SWARMHOST UNIT_TYPEID::ZERG_SWARMHOSTMP
#define SWARMHOST_BURROWED UNIT_TYPEID::ZERG_SWARMHOSTBURROWEDMP
#define ULTRALISK UNIT_TYPEID::ZERG_ULTRALISK
#define ULTRALISK_BURROWED UNIT_TYPEID::ZERG_ULTRALISKBURROWED
#define LOCUST UNIT_TYPEID::ZERG_LOCUSTMP
#define LOCUST_FLYING UNIT_TYPEID::ZERG_LOCUSTMPFLYING
#define BROODLING UNIT_TYPEID::ZERG_BROODLING
#define CHANGELING UNIT_TYPEID::ZERG_CHANGELING
#define CHANGELING_ZEALOT UNIT_TYPEID::ZERG_CHANGELINGZEALOT
#define NYDUS_WORM UNIT_TYPEID::ZERG_NYDUSCANAL
#define OVERLORD UNIT_TYPEID::ZERG_OVERLORD
#define DROPPERLORD UNIT_TYPEID::ZERG_OVERLORDTRANSPORT
#define OVERSEER_EGG UNIT_TYPEID::ZERG_OVERLORDCOCOON
#define OVERSEER UNIT_TYPEID::ZERG_OVERSEER
#define OVERSEER_SIEGED UNIT_TYPEID::ZERG_OVERSEERSIEGEMODE
#define MUTALISK UNIT_TYPEID::ZERG_MUTALISK
#define CORRUPTER UNIT_TYPEID::ZERG_CORRUPTOR
#define BROOD_LORD_EGG UNIT_TYPEID::ZERG_BROODLORDCOCOON
#define BROOD_LORD UNIT_TYPEID::ZERG_BROODLORD
#define VIPER UNIT_TYPEID::ZERG_VIPER
#define HATCHERY UNIT_TYPEID::ZERG_HATCHERY
#define LAIR UNIT_TYPEID::ZERG_LAIR
#define HIVE UNIT_TYPEID::ZERG_HIVE
#define SPINE_CRAWLER UNIT_TYPEID::ZERG_SPINECRAWLER
#define SPINE_CRAWLER_UPROOTED UNIT_TYPEID::ZERG_SPINECRAWLERUPROOTED
#define SPORE_CRAWLER UNIT_TYPEID::ZERG_SPORECRAWLER
#define SPORE_CRAWLER_UPROOTED UNIT_TYPEID::ZERG_SPORECRAWLERUPROOTED
#define SPAWNING_POOL UNIT_TYPEID::ZERG_SPAWNINGPOOL
#define ROACH_WARREN UNIT_TYPEID::ZERG_ROACHWARREN
#define EVO_CHAMBER UNIT_TYPEID::ZERG_EVOLUTIONCHAMBER
#define EXTRACTOR UNIT_TYPEID::ZERG_EXTRACTOR
#define BANELING_NEST UNIT_TYPEID::ZERG_BANELINGNEST
#define HYDRA_DEN UNIT_TYPEID::ZERG_HYDRALISKDEN
#define LURKER_DEN UNIT_TYPEID::ZERG_LURKERDENMP
#define INFESTATION_PIT UNIT_TYPEID::ZERG_INFESTATIONPIT
#define NYDUS UNIT_TYPEID::ZERG_NYDUSNETWORK
#define SPIRE UNIT_TYPEID::ZERG_SPIRE
#define GREATER_SPIRE UNIT_TYPEID::ZERG_GREATERSPIRE
#define ULTRALISK_CAVERN UNIT_TYPEID::ZERG_ULTRALISKCAVERN
#define CREEP_TUMOR_1 UNIT_TYPEID::ZERG_CREEPTUMOR
#define CREEP_TUMOR_2 UNIT_TYPEID::ZERG_CREEPTUMORBURROWED
#define CREEP_TUMOR_3 UNIT_TYPEID::ZERG_CREEPTUMORQUEEN

#define U_WARPGATE UPGRADE_ID::WARPGATERESEARCH
#define U_BLINK UPGRADE_ID::BLINKTECH
#define U_CHARGE UPGRADE_ID::CHARGE
#define U_DT_BLINK UPGRADE_ID::DARKTEMPLARBLINKUPGRADE
#define U_STORM UPGRADE_ID::PSISTORMTECH
#define U_GROUND_WEAPONS_1 UPGRADE_ID::PROTOSSGROUNDWEAPONSLEVEL1
#define U_GROUND_WEAPONS_2 UPGRADE_ID::PROTOSSGROUNDWEAPONSLEVEL2
#define U_GROUND_WEAPONS_3 UPGRADE_ID::PROTOSSGROUNDWEAPONSLEVEL3
#define U_GROUND_ARMOR_1 UPGRADE_ID::PROTOSSGROUNDARMORSLEVEL1
#define U_GROUND_ARMOR_2 UPGRADE_ID::PROTOSSGROUNDARMORSLEVEL2
#define U_GROUND_ARMOR_3 UPGRADE_ID::PROTOSSGROUNDARMORSLEVEL3
#define U_SHIELDS_1 UPGRADE_ID::PROTOSSSHIELDSLEVEL1
#define U_SHIELDS_2 UPGRADE_ID::PROTOSSSHIELDSLEVEL2
#define U_SHIELDS_3 UPGRADE_ID::PROTOSSSHIELDSLEVEL3
#define U_AIR_WEAPONS_1 UPGRADE_ID::PROTOSSAIRWEAPONSLEVEL1
#define U_AIR_WEAPONS_2 UPGRADE_ID::PROTOSSAIRWEAPONSLEVEL2
#define U_AIR_WEAPONS_3 UPGRADE_ID::PROTOSSAIRWEAPONSLEVEL3
#define U_AIR_ARMOR_1 UPGRADE_ID::PROTOSSAIRARMORSLEVEL1
#define U_AIR_ARMOR_2 UPGRADE_ID::PROTOSSAIRARMORSLEVEL2
#define U_AIR_ARMOR_3 UPGRADE_ID::PROTOSSAIRARMORSLEVEL3


#define RANGE_BATTERY_OVERCHARGE 12.55 // BATTERTY_OVERCHARGE
#define FRAME_TIME 22.4f

const std::vector<std::vector<UNIT_TYPEID>> TERRAN_PRIO = { {SIEGE_TANK_SIEGED},
															{SIEGE_TANK},
															{WIDOW_MINE},
															{VIKING},
															{RAVEN},
															{MEDIVAC},
															{CYCLONE},
															{GHOST},
															{MARINE, MARAUDER, REAPER, HELLION, HELLBAT, THOR_AP, THOR_AOE, VIKING_LANDED, BANSHEE, BATTLECRUISER, LIBERATOR, LIBERATOR_SIEGED},
															{SCV, MULE},
															{BUNKER},
															{PLANETARY},
															{MISSILE_TURRET},
															{BARRACKS_REACTOR, FACTORY_REACTOR, STARPORT_REACTOR},
															{BARRACKS_TECH_LAB, FACTORY_TECH_LAB, STARPORT_TECH_LAB},
															{REACTOR, TECH_LAB},
															{SUPPLY_DEPOT, SUPPLY_DEPOT_LOWERED},
															{COMMAND_CENTER, ORBITAL} };

const std::vector<std::vector<UNIT_TYPEID>> ZERG_PRIO = { {LURKER_BURROWED},
															{LURKER, LURKER_EGG},
															{INFESTOR, INFESTOR_BURROWED, VIPER},
															{BROOD_LORD, BROOD_LORD_EGG},
															{DROPPERLORD},
															{BANELING_EGG, BANELING, BANELING_BURROWED},
															{MUTALISK, CORRUPTER},
															{QUEEN, QUEEN_BURROWED, ZERGLING, ZERGLING_BURROWED, ROACH, ROACH_BURROWED, HYDRA, HYDRA_BURROWED, ULTRALISK, ULTRALISK_BURROWED},
															{SPINE_CRAWLER},
															{SPORE_CRAWLER},
															{SPINE_CRAWLER_UPROOTED, SPORE_CRAWLER_UPROOTED},
															{SWARMHOST, SWARMHOST_BURROWED},
															{DRONE, DRONE_BURROWED},
															{NYDUS_WORM},
															{LOCUST, LOCUST_FLYING, BROODLING},
															{OVERSEER, OVERSEER_SIEGED, OVERSEER_EGG},
															{OVERLORD},
															{HATCHERY, LAIR, HIVE},
															{SPAWNING_POOL, ROACH_WARREN, BANELING_NEST, HYDRA_DEN, LURKER_DEN, INFESTATION_PIT, NYDUS, SPIRE, GREATER_SPIRE, ULTRALISK_CAVERN},
															{EVO_CHAMBER, EXTRACTOR},
															{CREEP_TUMOR_1, CREEP_TUMOR_2, CREEP_TUMOR_3},
															{CHANGELING, CHANGELING_ZEALOT},
															{LARVA, EGG}, };

const std::vector<std::vector<UNIT_TYPEID>> PROTOSS_PRIO = { {BATTERY},
															{PRISM, PRISM_SIEGED},
															{DISRUPTOR},
															{HIGH_TEMPLAR, SENTRY},
															{PHOENIX, VOID_RAY, IMMORTAL},
															{ZEALOT, STALKER, ADEPT, DARK_TEMPLAR, COLOSSUS, ARCHON, ORACLE, CARRIER, TEMPEST, MOTHERSHIP},
															{PROBE},
															{OBSERVER, OBSERVER_SIEGED},
															{PYLON},
															{CANNON},
															{NEXUS},
															{GATEWAY, WARP_GATE, FORGE, CYBERCORE, TWILIGHT, TEMPLAR_ARCHIVE, STARGATE, FLEET_BEACON, DARK_SHRINE, ROBO, ROBO_BAY},
															{ASSIMILATOR} };

const std::vector<UNIT_TYPEID> ALL_ARMY_UNITS = { ZEALOT, ADEPT, STALKER, SENTRY, DARK_TEMPLAR, HIGH_TEMPLAR, ARCHON, 
												IMMORTAL, PRISM, PRISM_SIEGED, OBSERVER, OBSERVER_SIEGED, COLOSSUS, DISRUPTOR, 
												PHOENIX, VOID_RAY, ORACLE, CARRIER, TEMPEST, MOTHERSHIP };


const std::vector<UNIT_TYPEID> MINERAL_PATCH = {	UNIT_TYPEID::NEUTRAL_BATTLESTATIONMINERALFIELD, 
													UNIT_TYPEID::NEUTRAL_BATTLESTATIONMINERALFIELD750, 
													UNIT_TYPEID::NEUTRAL_LABMINERALFIELD,
													UNIT_TYPEID::NEUTRAL_LABMINERALFIELD750, 
													UNIT_TYPEID::NEUTRAL_MINERALFIELD, 
													UNIT_TYPEID::NEUTRAL_MINERALFIELD450, 
													UNIT_TYPEID::NEUTRAL_MINERALFIELD750,
													UNIT_TYPEID::NEUTRAL_PURIFIERMINERALFIELD, 
													UNIT_TYPEID::NEUTRAL_PURIFIERMINERALFIELD750, 
													UNIT_TYPEID::NEUTRAL_PURIFIERRICHMINERALFIELD,
													UNIT_TYPEID::NEUTRAL_PURIFIERRICHMINERALFIELD750, 
													UNIT_TYPEID::NEUTRAL_RICHMINERALFIELD, 
													UNIT_TYPEID::NEUTRAL_RICHMINERALFIELD750 };

enum UpgradeType
{
	ground_weapons,
	ground_armor,
	shields,
	air_weapons,
	air_armor
};

enum AttackPath
{
	direct,
	indirect,
	alt
};

enum ArmyRole
{
	none,
	outside_control,
	pressure,
	attack,
	scour,
	simple_attack,
	defend_door,
	defend_third,
	defend_main,
	defend_natural,
	defend_outer,
	defend_base,
	observer_scout,
	oracle_harass,
	scout_bases,
	deny_outer_base,
	defend_main_ramp
};

const std::map<ArmyRole, std::string> ARMY_ROLE_TO_STRING = {	{ArmyRole::none, "None"},
																{ArmyRole::outside_control, "Outside control"},
																{ArmyRole::pressure, "Pressure"},
																{ArmyRole::attack, "Attack"},
																{ArmyRole::scour, "Scour"},
																{ArmyRole::simple_attack, "Simple attack"},
																{ArmyRole::defend_door, "Defend door"},
																{ArmyRole::defend_third, "Defend Third"},
																{ArmyRole::defend_main, "Defend main"},
																{ArmyRole::defend_natural, "Defend natural"},
																{ArmyRole::defend_outer, "Defend outer"},
																{ArmyRole::defend_base, "Defend base"},
																{ArmyRole::observer_scout, "Observer scout"},
																{ArmyRole::oracle_harass, "Oracle harass"},
																{ArmyRole::scout_bases, "Scout bases"},
																{ArmyRole::deny_outer_base, "Deny outer base"},
																{ArmyRole::defend_main_ramp, "Defend main ramp"} };

struct ScoutInfoZerg
{
	float natural_timing = 0;
	float third_timing = 0;
	float gas_timing = 0;
	int gas_mined = 0;
	float pool_timing = 0;
	bool pool_active = 0;
	int drone_count = 0;
	float roach_warren_timing = 0;
};

enum FirstRaxProduction {
	idle,
	marine,
	reaper,
	reactor,
	techlab
};

struct ScoutInfoTerran
{
	float natural_timing = 0;
	float third_timing = 0;
	float gas_timing = 0;
	Point3D gas_pos;
	float second_gas_timing = 0;
	int gas_mined = 0;
	float barrackes_timing = 0;
	bool factory_timing = 0;
	int scv_count = 0;
	int num_barracks = 0;
	FirstRaxProduction first_rax_production = FirstRaxProduction::idle;
};

struct WarpgateStatus
{
	bool used;
	int frame_ready;
	WarpgateStatus() 
	{
		used= false;
		frame_ready = 0;
	}
	WarpgateStatus(int curr_frame)
	{
		used = false;
		frame_ready = curr_frame + 1;
	}
};

struct UnitCost
{
	int mineral_cost = 0;
	int vespene_cost = 0;
	int supply = 0;
	UnitCost() {};
	UnitCost(int x, int y, int z)
	{
		mineral_cost = x;
		vespene_cost = y;
		supply = z;
	}
	UnitCost operator+(const UnitCost& other) const
	{
		return UnitCost(mineral_cost + other.mineral_cost, vespene_cost + other.vespene_cost, supply + other.supply);
	}
	UnitCost operator-(const UnitCost& other) const
	{
		return UnitCost(mineral_cost - other.mineral_cost, vespene_cost - other.vespene_cost, supply - other.supply);
	}
	void operator+=(const UnitCost& other) 
	{
		mineral_cost += other.mineral_cost;
		vespene_cost += other.vespene_cost;
		supply += other.supply;
	}
	UnitCost operator*(const int num) const
	{
		return UnitCost(mineral_cost * num, vespene_cost * num, supply * num);
	}
};

struct EnemyUnitPosition
{
	Point2D pos;
	int frames;
	EnemyUnitPosition()
	{
		pos = Point2D(0, 0);
		frames = 0;
	}
	EnemyUnitPosition(Point2D pos)
	{
		this->pos = pos;
		frames = 0;
	}
};

}